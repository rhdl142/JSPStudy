JSP, Java Server Pages
- 서블릿의 일종
- 손 빠른 개발자 2

- 서블릿 장점 : 자바 클래스 기반. 자바 문법을 자유롭게 작성
- 서블릿 단점 : HTML 작성이 힘들다.(문자열로 작성)

- JSP 장점 : HTML 페이지 기반. HTML을 자유롭게 작성
- JSP 단점 : 자바 문법 작성이 불편하다.


JSP 구성 요소
- 주석, Comment
- JSP 지시어(지시자), JSP directive
- 스크립트 요소, Scripting Elements
- 액션 태그, Action Tag

JSP 주석
- *.jsp 내에서 사용하는 주석
   a. <!-- -->
   b. <%-- --%>
   c. 스크립트 요소내의 자바 주석
   

JSP 지시자, JSP Directive
- <%@ XXX %>
- JSP 페이지를 실행하는 컨테이너(톰캣)에게 해당 JSP 페이지를 어떻게 처리할지 알려주는 역할
a. page 지시자
b. include 지시자
c. taglib 지시자

스크립트 요소, Scripting Elements
- <% %>
- 자바 구문을 지원하는 역할
a. 스크립틀릿, Scriptlet : <% %>
b. 익스프레이션, Expression : <%= %>
c. 선언부, Declaration : <%! %>

액션 태그, Action Tag
- <xx:XXX>, <c:if>, <jsp:include>
- 태그 형식을 빌린 자바 명령어
a. JSP 기본 액션 태그 <jsp:XXX>
b. JSTL 확장 액션 태그 : <c:XXX>
c. 사용자 커스텀 액션 태그 : <xxx:XXX>


----------------------------------------------------------------------------------------------

page 지시자
- <%@ page 속성="값" 속성="값"..%>
- <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

a. language
   - JSP 페이지에서 사용하는 프로그래밍 언어 지정
   - 기본값 "java"
   
b. contentType 
   - 웹 페이지의 내용물 형식을 브라우저에 알려주는 역할
   - contentType="text/html; charset=UTF-8"
   - "text/html" : MIME(Multipurpose Internet Mail Extension)
   - contentType="text/html; charset=ISO-8859-1" //이클립스 기본 설정(EUR-KR, MS949)
   - 문서 형식 + 인코딩 종류 > 브라우저에 알려주는 역할

c. pageEncoding
   - 현재 페에지의 인코딩 문자셋
   - 기본값 : ISO-8859-1 > UTF-8
   - 이 처리를 안하면 한글 깨짐
   - contentTyhpe과 동일하게 설정
   
d. import(*)
   - 패키지 or 클래스 참조
   - 자바의 import문과 동일한 역할


e. session
   - 세션 사용 유무 설정
   - 기본값 : true

f. buffer 
   - JSP 페이지의 출력 버퍼 크기 지정
   - 기본값 : 8KB

g. info
   - 페이지 대한 설명(개발자용)

h. errorPage
   - 에러 페이지로 사용할 페이지 지정 > 에러 발생 시 해당 페이지로 자동 이동
   
   
i. isErrorPage
   - 본인이 에러 페이지라고 선언 

include 지시자
- <%@ include file="URL" %>
- 특정 JSP/HTML 페이지를 현재 JSP 페이지의 일부에 삽입하는 기술
- HTML의 <iframe>와 유사한 역할
- 조각 페이지
- 재사용성(***) + 유지보수(***)
- ex) 주메뉴, 서브메뉴, 푸터, 로그인박스 등..


taglib 지시자
- JSTL, 커스텀 태그 등을 사용하기 위해서 지정하는 지시자
- 나중에 수업

--------------------------------------------------------지시자(page, include)

JSP 스크립트 요소
- JSP 페이지내에서 자바 구문을 지원하는 요소
a. 선언문
b. 스크립틀릿
c. 표현식

스크립틀릿, Scriptlet
- <% %>
- 이 영역은 자바 영역이다.(톰캣에게)
- 비즈니스 코드 작성(업무 구현)
   - 데이터 조작/가공
   - JDBC 오라클 접근
   - 동적 HTML 제어
- 사용 빈도 높음
- JSP > 서블릿 service() 메소드의 영역


표현식, Expression
- <%= 값 %>
- 상수, 변수, 메소드 반환값 등을 HTML 페이지의 원하는 위치에 출력하는 역할
- 주로 <% %> 내에서 만들어진 값들을 출력하는 용도
- JSP > 서블릿 service() 내의 out.print(값) 인자값 전달


선언문, Declaration
- <%! %>
- JSP 페이지의 멤버 변수 or 메소드를 선언하는 역할
- JSP > 서블릿 멤버(변수, 메소드) 영역

--------------------------------------------------------------------------------스트립팅 요소
JSP 내장 객체, Implicit Object
	- 개발자가 직접 만들지 않아도 미리 예약된 표현을 통해 제공되는 객체들
	- JSP 페이지가 서블릿 클래스로 변환될 떄 상위 클래스로부터 상속받은 멤버 변수
	- request, response, session, pageContext, out //사용 빈도 높음
	- application, config, page, exception //사용 빈도 낮음

a. request 객체
	- 클라이언트 -> (모든 행동) -> 서버
	- javax.servlet.http.HttpServletRequest 클래스
	
	1. 요청 파라미터 가져오기
		- 클라이언트가 서버로 보낸 데이터를 가져오기
		- ex06_request_form.jsp  > 사용자 데이터 입력(<form>)
		- ex06_request_procdess.jsp > 수신 처리 역활
		- ex07_request_form.jsp
		- ex07_request_process.jsp
	2. HTTP 요청 헤더 정보 가져오기
		- 가끔씩 필요한 정보
		- ex08_request_header.jsp
	3. 세션 처리
		- 나중에
	4. 쿠키 처리
		- 나중에
	5. URL 처리
		- 나중에
	6. 인코딩 처리
		- 나중에
	7. 데이터 입출력
		- request 객체 내부에 사용자 데이터를 저장할 수 있는 맵형태의 저장 공간이 잇따.
b. response
	- 서버  > (모든 행동) > 클라이언트
	- javax.servlet.http.HttpServletResponse 클래스
	
	a. 응답 컨텐츠 작성
		- 나중에
	b. 페이지 이동하기
		- ex09_response_one.jsp
		- ex09_response_two.jsp
	c. 쿠키 처리
	
	d. 인코딩 처리
	
	페이지 요청 방식 구분하는 방법(method)
	- 브라우저가 서버에게 페이지를 요구하면..서버는 아래 중 한가지 방법으로 HTTP 요청이 발생
	1. POST
	2. GET
	- ex10_method_one.jsp
	- ex10_method_two.jsp
	
c. pageContext
	- 한 페이지 요청 ~ 응답까지 과정에 관련된 여러가지 행동을 하는 객체
	- request/response 유사
	
	1. 데이터 입출력
    	- ex11_pagecontext.jsp
   	2. 페이지 이동
   		- response.sendRedirect(URL)
   		- pageContext.forward(URL)
   		- ex12_pagecontext_one.jsp
   		- ex12_pagecontext_two.jsp